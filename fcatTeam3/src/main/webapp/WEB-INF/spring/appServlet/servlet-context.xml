<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DB 접속정보를 저장하는 dataSource객체 생성 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@1.220.236.74:15214:xe"/>
		<beans:property name="username" value="KH_FINAL_3"/>
		<beans:property name="password" value="1234"/>
	</beans:bean>
	
	<!-- Mybatis 설정 -->
	<!-- SqlSessionFactoryBean 설정 : 접속 정보 + config 경로 설정 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
		<beans:property name="mapperLocations" value="classpath:/mapper/*mapper.xml"/>
	</beans:bean>
	
	<!-- SqlSessionTemplate 생성 -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession"/>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000"></beans:property>
	</beans:bean>
	
	<!-- 트랜잭션 관리용 객체 / id는 spring에서 정해진 값 자동 check -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 트랜잭션 어노테이션 사용 -->
	<tx:annotation-driven/>
	
	<!-- 웹 소켓 알림용 설정 -->
	<beans:bean id="alarmMsg" class="kr.or.seller.model.service.AlarmMsg"/>
	<websocket:handlers>
		<websocket:mapping handler="alarmMsg" path="/alarmMsg.do"/>
	</websocket:handlers>
	
	<!-- 1:1 채팅용 설정 -->
	<beans:bean id="chatting" class="kr.or.common.model.service.Chatting"/>
		<websocket:handlers>
		<websocket:mapping handler="chatting" path="/chatting.do"/>
	</websocket:handlers>
	
	<!-- 상담사와 1:1채팅 -->
	<beans:bean id="oneToOneChat" class="kr.or.member.model.service.OneToOneChat"/>
	<!-- kr.or.member.model.service.OneToOneChat클래스의 자료형 변수 oneToOneChat을 생성 -->
	<websocket:handlers>
		<websocket:mapping handler="oneToOneChat" path="/chat.do"/>
		<!-- /chat.do와  oneToOneChat변수를 매핑(1대1로 매칭)시켜준다. -->
	</websocket:handlers>
	
	
	<context:component-scan base-package="kr.or.iei" />
	<context:component-scan base-package="kr.or.seller" />
	<context:component-scan base-package="kr.or.common" />
	<context:component-scan base-package="kr.or.member" />
	<context:component-scan base-package="kr.or.admin" />
	<context:component-scan base-package="kr.or.user" />
	
</beans:beans>
